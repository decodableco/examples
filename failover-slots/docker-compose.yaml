x-postgres-common:
  &postgres-common
  image: postgres:17-alpine
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U user --dbname=inventorydb'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    # Sign up for an ngrok account at https://dashboard.ngrok.com/signup
    # Get your auth-token from https://dashboard.ngrok.com/get-started/your-authtoken
    # and put an .env file in the same folder as this Docker Compose file in the form
    # NGROK_AUTHTOKEN=your_token_value
    command: "start --all --config /etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040 # Web dashboard for ngrok
    env_file: ".env"
  pgbouncer:
    image: edoburu/pgbouncer:latest
    environment:
      - DB_HOST=postgres_primary
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=top-secret
      - ADMIN_USERS=postgres,admin
      - AUTH_TYPE=scram-sha-256
    ports:
      - 15432:5432
  postgres_primary:
    <<: *postgres-common
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: inventorydb
      POSTGRES_PASSWORD: top-secret
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres 
      -c wal_level=logical 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10
      -c synchronized_standby_slots=replication_slot
    volumes:
      - ./00_init.sql:/docker-entrypoint-initdb.d/00_init.sql

  postgres_replica:
    <<: *postgres-common
    ports:
      - 5433:5432
    environment:
      PGUSER: replicator
      PGPASSWORD: zufsob-kuvtum-bImxa6
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=postgres_primary --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres -c wal_level=logical -c hot_standby=on -c hot_standby_feedback=1
      "
    depends_on:
      - postgres_primary
